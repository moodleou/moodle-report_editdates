define("report_editdates/datehelper",["exports","core/modal_factory","core/str"],(function(_exports,ModalFactory,_str){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,ModalFactory=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(ModalFactory);let datetimeSelectors={},endDate={};_exports.init=()=>{datetimeSelectors=document.querySelectorAll("div[data-fieldtype='date_time_selector']");let courseEnd=datetimeSelectors.item(1);endDate=getDate(courseEnd),courseEnd.addEventListener("change",endDateChanged);for(const date of datetimeSelectors.entries())date[0]>1&&date[1].addEventListener("change",modDateChanged);M.form.dateselector.calendar.on("selectionChange",updateDates,!1)};const updateDates=()=>{let datepicker=M.form.dateselector.currentowner;null!==datepicker&&setTimeout((function(){let datetimeSelector=datepicker.calendarimage.getDOMNode().closest("div[data-fieldtype='date_time_selector']");datetimeSelector===datetimeSelectors.item(1)?endDateChanged():checkEndDate(datetimeSelector)}),100)},endDateChanged=()=>{let datesPastEnd=0;endDate=getDate(datetimeSelectors.item(1));for(const date of datetimeSelectors.entries())if(date[0]>1){let optional=date[1].querySelector("input[type='checkbox']");(null===optional||optional.checked)&&(datesPastEnd+=checkEndDate(date[1]))}if(datesPastEnd>0)return ModalFactory.create({type:ModalFactory.types.DEFAULT,title:(0,_str.get_string)("datesafterend_title","report_editdates"),body:(0,_str.get_string)("datesafterend_body","report_editdates")}).then((modal=>(modal.show(),modal)))},modDateChanged=ev=>{let container=ev.target.closest("div[data-fieldtype='date_time_selector']");checkEndDate(container)},getDate=dateEl=>{let year=dateEl.querySelector(".fdate_time_selector > div:nth-child(3) select"),month=dateEl.querySelector(".fdate_time_selector > div:nth-child(2) select"),day=dateEl.querySelector(".fdate_time_selector > div:nth-child(1) select"),hour=dateEl.querySelector(".fdate_time_selector > div:nth-child(4) select"),minute=dateEl.querySelector(".fdate_time_selector > div:nth-child(5) select");return new Date(year.options[year.selectedIndex].value,month.options[month.selectedIndex].value-1,day.options[day.selectedIndex].value,hour.options[hour.selectedIndex].value,minute.options[minute.selectedIndex].value)},checkEndDate=el=>{let afterEndDate=!1;if(getDate(el)>endDate){el.parentNode.classList.add("afterend");for(const input of el.querySelectorAll(".form-group").values())input.classList.add("afterend");afterEndDate=!0}else{el.parentNode.classList.remove("afterend");for(const input of el.querySelectorAll(".form-group").values())input.classList.remove("afterend")}return afterEndDate}}));

//# sourceMappingURL=datehelper.min.js.map